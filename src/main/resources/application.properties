server.port=8081
spring.application.name=eurojack

eurojackpot.url.base=https://www.euro-jackpot.net
eurojackpot.url.archive.year.prefix=/results-archive-

scrapper.headers.userAgent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36
scrapper.headers.acceptLang=Accept-Language
scrapper.headers.acceptLangValue=en-GB,en;q=0.6

logging.level.org.springframework.jdbc=DEBUG

######### Spring-docker-compose
# It will use the 'docker-compose.yml' file found in the project classpath

## Running application from IntelliJ

### Manage docker service by IntelliJ
# There is a bug that makes the ports specification in the 'docker-compose' file to be ignored and
# the application starts with random public ports, using the image 'postgres:latest' and network 'eurojack_default'.
# To connect to the docker instance (postgres:latest), use:
#       PGPASSWORD=<POSTGRES_PASSWORD> psql -U <POSTGRES_USER> -d <POSTGRES_DB> -h localhost -p <EXTERNAL_PORT>
# To get those values go to 'Services'-window -> 'Docker' -> 'Docker-compose: eurojack' -> 'postgres' -> 'eurojack-postgres-1'
# Select the 'Dashboard' tab from the image, in 'Environment variables and 'Ports' will you find the values.
# When the application is stopped, the docker container is stopped also.

### Manage the docker service you self
# Disable the below properties:
#spring.docker.compose.lifecycle-management=none
#spring.datasource.url=jdbc:postgresql://localhost:5432/
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.username=postgres
#spring.datasource.password=secret
# Start the docker compose file according to the comments in that file
# It exposes the port according to the configuration in the 'docker-compose.yml' file and uses the image 'postgres'
# and network 'docker_default'.
# You can now start the application. When the application is stopped, you need to manually stop the docker container.
#########

spring.sql.init.mode=ALWAYS
spring.sql.init.schema-locations=optional:classpath*:*_initialization_schema.sql

spring.jpa.show-sql: true
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.default_schema=
spring.jpa.defer-datasource-initialization=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

spring.modulith.events.republish-outstanding-events-on-restart=true